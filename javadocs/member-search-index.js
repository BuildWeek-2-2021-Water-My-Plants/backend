memberSearchIndex = [{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"AA_findByUsernameNotfound()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"AB_findByNameContaining()"},{"p":"com.lambdaschool.foundation.controllers","c":"RolesController","l":"addNewRole(Role)","url":"addNewRole(com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"addNewUser()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"addNewUser(User)","url":"addNewUser(com.lambdaschool.foundation.models.User)"},{"p":"com.lambdaschool.foundation.controllers","c":"UseremailController","l":"addNewUserEmail(long, String)","url":"addNewUserEmail(long,java.lang.String)"},{"p":"com.lambdaschool.foundation.config","c":"SwaggerWebMVC","l":"addResourceHandlers(ResourceHandlerRegistry)","url":"addResourceHandlers(org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry)"},{"p":"com.lambdaschool.foundation.controllers","c":"OpenController","l":"addSelf(HttpServletRequest, UserMinimum)","url":"addSelf(javax.servlet.http.HttpServletRequest,com.lambdaschool.foundation.models.UserMinimum)"},{"p":"com.lambdaschool.foundation.config","c":"Swagger2Config","l":"api()"},{"p":"com.lambdaschool.foundation.config","c":"SecurityConfig","l":"authenticationManagerBean()"},{"p":"com.lambdaschool.foundation.config","c":"AuthorizationServerConfig","l":"AuthorizationServerConfig()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"B_findUserById()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"BA_findUserByIdNotFound()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"C_findAll()"},{"p":"com.lambdaschool.foundation.config","c":"AuthorizationServerConfig","l":"configure(AuthorizationServerEndpointsConfigurer)","url":"configure(org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer)"},{"p":"com.lambdaschool.foundation.config","c":"AuthorizationServerConfig","l":"configure(ClientDetailsServiceConfigurer)","url":"configure(org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer)"},{"p":"com.lambdaschool.foundation.config","c":"ResourceServerConfig","l":"configure(HttpSecurity)","url":"configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"},{"p":"com.lambdaschool.foundation.config","c":"ResourceServerConfig","l":"configure(ResourceServerSecurityConfigurer)","url":"configure(org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer)"},{"p":"com.lambdaschool.foundation.exceptions","c":"CustomErrorDetails","l":"CustomErrorDetails()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"D_delete()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"DA_notFoundDelete()"},{"p":"com.lambdaschool.foundation.config","c":"DataSourceConfig","l":"dataSource()"},{"p":"com.lambdaschool.foundation.config","c":"DataSourceConfig","l":"DataSourceConfig()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"delete()"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"delete(long)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"delete(long)"},{"p":"com.lambdaschool.foundation.services","c":"UseremailService","l":"delete(long)"},{"p":"com.lambdaschool.foundation.services","c":"UseremailServiceImpl","l":"delete(long)"},{"p":"com.lambdaschool.foundation.services","c":"RoleService","l":"deleteAll()"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"deleteAll()"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"deleteAll()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"deleteAll()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"deleteAll()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"deleteUserById()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"deleteUserById()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"deleteUserById(long)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"deleteUserByIdNotFound()"},{"p":"com.lambdaschool.foundation.controllers","c":"UseremailController","l":"deleteUserEmailById(long)"},{"p":"com.lambdaschool.foundation.config","c":"SimpleCorsFilter","l":"doFilter(ServletRequest, ServletResponse, FilterChain)","url":"doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"E_findByUsername()"},{"p":"com.lambdaschool.foundation.config","c":"SecurityConfig","l":"encoder()"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"ErrorDetail()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"F_save()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"FA_saveputfound()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"FA_saveputnotfound()"},{"p":"com.lambdaschool.foundation.services","c":"RoleService","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"UseremailService","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"UseremailServiceImpl","l":"findAll()"},{"p":"com.lambdaschool.foundation.services","c":"RoleService","l":"findByName(String)","url":"findByName(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"findByName(String)","url":"findByName(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"findByName(String)","url":"findByName(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"findByName(String)","url":"findByName(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"findByNameContaining()"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"findByNameContaining(String)","url":"findByNameContaining(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"findByNameContaining(String)","url":"findByNameContaining(java.lang.String)"},{"p":"com.lambdaschool.foundation.repository","c":"RoleRepository","l":"findByNameIgnoreCase(String)","url":"findByNameIgnoreCase(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"findByUsername()"},{"p":"com.lambdaschool.foundation.repository","c":"UserRepository","l":"findByUsername(String)","url":"findByUsername(java.lang.String)"},{"p":"com.lambdaschool.foundation.repository","c":"UserRepository","l":"findByUsernameContainingIgnoreCase(String)","url":"findByUsernameContainingIgnoreCase(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"findByUsernameNotfound()"},{"p":"com.lambdaschool.foundation.services","c":"RoleService","l":"findRoleById(long)"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"findRoleById(long)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"findUserById()"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"findUserById(long)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"findUserById(long)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"findUserByIdNotFound()"},{"p":"com.lambdaschool.foundation.services","c":"UseremailService","l":"findUseremailById(long)"},{"p":"com.lambdaschool.foundation.services","c":"UseremailServiceImpl","l":"findUseremailById(long)"},{"p":"com.lambdaschool.foundation","c":"FoundationApplication","l":"FoundationApplication()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation","c":"FoundationApplicationTesting","l":"FoundationApplicationTesting()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"G_update()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"GB_updateNotCurrentUserNorAdmin()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getAllUsers()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getAuthority()"},{"p":"com.lambdaschool.foundation.models","c":"ValidationError","l":"getCode()"},{"p":"com.lambdaschool.foundation.services","c":"HelperFunctions","l":"getConstraintViolation(Throwable)","url":"getConstraintViolation(java.lang.Throwable)"},{"p":"com.lambdaschool.foundation.services","c":"HelperFunctionsImpl","l":"getConstraintViolation(Throwable)","url":"getConstraintViolation(java.lang.Throwable)"},{"p":"com.lambdaschool.foundation.services","c":"UserAuditing","l":"getCurrentAuditor()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getCurrentUserInfo()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"getCurrentUserInfo()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"getCurrentUserInfo(Authentication)","url":"getCurrentUserInfo(org.springframework.security.core.Authentication)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"getDetail()"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"getDeveloperMessage()"},{"p":"com.lambdaschool.foundation.exceptions","c":"CustomErrorDetails","l":"getErrorAttributes(WebRequest, boolean)","url":"getErrorAttributes(org.springframework.web.context.request.WebRequest,boolean)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"getErrors()"},{"p":"com.lambdaschool.foundation.models","c":"ValidationError","l":"getMessage()"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"getName()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getPassword()"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"getPassword()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getPrimaryemail()"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"getPrimaryemail()"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"getRole()"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"getRole()"},{"p":"com.lambdaschool.foundation.controllers","c":"RolesController","l":"getRoleById(Long)","url":"getRoleById(java.lang.Long)"},{"p":"com.lambdaschool.foundation.controllers","c":"RolesController","l":"getRoleByName(String)","url":"getRoleByName(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"getRoleid()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getRoles()"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"getStatus()"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"getTimestamp()"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"getTitle()"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"getUser()"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"getUser()"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"getUser()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getUserById()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"getUserById()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"getUserById(Long)","url":"getUserById(java.lang.Long)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getUserByIdNotFound()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"getUserByIdNotFound()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getUserByName()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"getUserByName()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"getUserByName(String)","url":"getUserByName(java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getUserByNameNotFound()"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"getUseremail()"},{"p":"com.lambdaschool.foundation.controllers","c":"UseremailController","l":"getUserEmailById(Long)","url":"getUserEmailById(java.lang.Long)"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"getUseremailid()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getUseremails()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getUserid()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"getUserLikeName()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"getUserLikeName(String)","url":"getUserLikeName(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"getUsername()"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"getUsername()"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"getUsers()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"givenPostAUser()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"givenPutAUser()"},{"p":"com.lambdaschool.foundation.config","c":"SecurityConfig","l":"globalUserDetails(AuthenticationManagerBuilder)","url":"globalUserDetails(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)"},{"p":"com.lambdaschool.foundation.config","c":"H2ServerConfiguration","l":"H2ServerConfiguration()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.config","c":"H2ServerConfiguration","l":"h2TcpServer()"},{"p":"com.lambdaschool.foundation.config","c":"H2ServerConfiguration","l":"h2WebServer()"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleAsyncRequestTimeoutException(AsyncRequestTimeoutException, HttpHeaders, HttpStatus, WebRequest)","url":"handleAsyncRequestTimeoutException(org.springframework.web.context.request.async.AsyncRequestTimeoutException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleBindException(BindException, HttpHeaders, HttpStatus, WebRequest)","url":"handleBindException(org.springframework.validation.BindException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleConversionNotSupported(ConversionNotSupportedException, HttpHeaders, HttpStatus, WebRequest)","url":"handleConversionNotSupported(org.springframework.beans.ConversionNotSupportedException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleExceptionInternal(Exception, Object, HttpHeaders, HttpStatus, WebRequest)","url":"handleExceptionInternal(java.lang.Exception,java.lang.Object,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleHttpMediaTypeNotAcceptable(HttpMediaTypeNotAcceptableException, HttpHeaders, HttpStatus, WebRequest)","url":"handleHttpMediaTypeNotAcceptable(org.springframework.web.HttpMediaTypeNotAcceptableException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleHttpMediaTypeNotSupported(HttpMediaTypeNotSupportedException, HttpHeaders, HttpStatus, WebRequest)","url":"handleHttpMediaTypeNotSupported(org.springframework.web.HttpMediaTypeNotSupportedException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleHttpMessageNotReadable(HttpMessageNotReadableException, HttpHeaders, HttpStatus, WebRequest)","url":"handleHttpMessageNotReadable(org.springframework.http.converter.HttpMessageNotReadableException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleHttpMessageNotWritable(HttpMessageNotWritableException, HttpHeaders, HttpStatus, WebRequest)","url":"handleHttpMessageNotWritable(org.springframework.http.converter.HttpMessageNotWritableException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException, HttpHeaders, HttpStatus, WebRequest)","url":"handleHttpRequestMethodNotSupported(org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleMethodArgumentNotValid(MethodArgumentNotValidException, HttpHeaders, HttpStatus, WebRequest)","url":"handleMethodArgumentNotValid(org.springframework.web.bind.MethodArgumentNotValidException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleMissingPathVariable(MissingPathVariableException, HttpHeaders, HttpStatus, WebRequest)","url":"handleMissingPathVariable(org.springframework.web.bind.MissingPathVariableException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleMissingServletRequestParameter(MissingServletRequestParameterException, HttpHeaders, HttpStatus, WebRequest)","url":"handleMissingServletRequestParameter(org.springframework.web.bind.MissingServletRequestParameterException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleMissingServletRequestPart(MissingServletRequestPartException, HttpHeaders, HttpStatus, WebRequest)","url":"handleMissingServletRequestPart(org.springframework.web.multipart.support.MissingServletRequestPartException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleNoHandlerFoundException(NoHandlerFoundException, HttpHeaders, HttpStatus, WebRequest)","url":"handleNoHandlerFoundException(org.springframework.web.servlet.NoHandlerFoundException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleOAuth2AccessDeniedException(OAuth2AccessDeniedException)","url":"handleOAuth2AccessDeniedException(org.springframework.security.oauth2.client.resource.OAuth2AccessDeniedException)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleResourceFoundException(ResourceFoundException)","url":"handleResourceFoundException(com.lambdaschool.foundation.exceptions.ResourceFoundException)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleResourceNotFoundException(ResourceNotFoundException)","url":"handleResourceNotFoundException(com.lambdaschool.foundation.exceptions.ResourceNotFoundException)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleServletRequestBindingException(ServletRequestBindingException, HttpHeaders, HttpStatus, WebRequest)","url":"handleServletRequestBindingException(org.springframework.web.bind.ServletRequestBindingException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"handleTypeMismatch(TypeMismatchException, HttpHeaders, HttpStatus, WebRequest)","url":"handleTypeMismatch(org.springframework.beans.TypeMismatchException,org.springframework.http.HttpHeaders,org.springframework.http.HttpStatus,org.springframework.web.context.request.WebRequest)"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"hashCode()"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"hashCode()"},{"p":"com.lambdaschool.foundation.services","c":"HelperFunctionsImpl","l":"HelperFunctionsImpl()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"HelperFunctions","l":"isAuthorizedToMakeChange(String)","url":"isAuthorizedToMakeChange(java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"HelperFunctionsImpl","l":"isAuthorizedToMakeChange(String)","url":"isAuthorizedToMakeChange(java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"UseremailController","l":"listAllUseremails()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"listAllUsers()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"listAllUsers()"},{"p":"com.lambdaschool.foundation.controllers","c":"RolesController","l":"listRoles()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"listUsersNameContaining()"},{"p":"com.lambdaschool.foundation.services","c":"SecurityUserServiceImpl","l":"loadUserByUsername(String)","url":"loadUserByUsername(java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"LogoutController","l":"LogoutController()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"LogoutController","l":"logoutSelf(HttpServletRequest)","url":"logoutSelf(javax.servlet.http.HttpServletRequest)"},{"p":"com.lambdaschool.foundation","c":"FoundationApplication","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.lambdaschool.foundation","c":"FoundationApplicationTesting","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"notFoundDelete()"},{"p":"com.lambdaschool.foundation.controllers","c":"OpenController","l":"OpenController()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"RolesController","l":"putUpdateRole(long, Role)","url":"putUpdateRole(long,com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.exceptions","c":"ResourceFoundException","l":"ResourceFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lambdaschool.foundation.exceptions","c":"ResourceNotFoundException","l":"ResourceNotFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lambdaschool.foundation.config","c":"ResourceServerConfig","l":"ResourceServerConfig()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.handlers","c":"RestExceptionHandler","l":"RestExceptionHandler()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"OpenController","l":"returnNoFavicon()"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"Role()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"Role(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"RolesController","l":"RolesController()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"RoleServiceImpl()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation","c":"SeedData","l":"run(String[])","url":"run(java.lang.String[])"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"save()"},{"p":"com.lambdaschool.foundation.services","c":"UseremailService","l":"save(long, String)","url":"save(long,java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UseremailServiceImpl","l":"save(long, String)","url":"save(long,java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"RoleService","l":"save(Role)","url":"save(com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"save(Role)","url":"save(com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"save(User)","url":"save(com.lambdaschool.foundation.models.User)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"save(User)","url":"save(com.lambdaschool.foundation.models.User)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"savePut()"},{"p":"com.lambdaschool.foundation.config","c":"SecurityConfig","l":"SecurityConfig()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"SecurityUserServiceImpl","l":"SecurityUserServiceImpl()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation","c":"SeedData","l":"SeedData()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"ValidationError","l":"setCode(String)","url":"setCode(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"setDetail(String)","url":"setDetail(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"setDeveloperMessage(String)","url":"setDeveloperMessage(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"setErrors(List<ValidationError>)","url":"setErrors(java.util.List)"},{"p":"com.lambdaschool.foundation.models","c":"ValidationError","l":"setMessage(String)","url":"setMessage(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"setName(String)","url":"setName(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setPassword(String)","url":"setPassword(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"setPassword(String)","url":"setPassword(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setPasswordNoEncrypt(String)","url":"setPasswordNoEncrypt(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setPrimaryemail(String)","url":"setPrimaryemail(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"setPrimaryemail(String)","url":"setPrimaryemail(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"setRole(long)"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"setRole(Role)","url":"setRole(com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"setRoleid(long)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setRoles(Set<UserRoles>)","url":"setRoles(java.util.Set)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"setStatus(int)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"setTimestamp(Date)","url":"setTimestamp(java.util.Date)"},{"p":"com.lambdaschool.foundation.models","c":"ErrorDetail","l":"setTitle(String)","url":"setTitle(java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"setUp()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"setUp()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"setUp()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"setUp()"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"setUser(long)"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"setUser(User)","url":"setUser(com.lambdaschool.foundation.models.User)"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"setUser(User)","url":"setUser(com.lambdaschool.foundation.models.User)"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"setUseremail(String)","url":"setUseremail(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"setUseremailid(long)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setUseremails(List<Useremail>)","url":"setUseremails(java.util.List)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setUserid(long)"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"setUsername(String)","url":"setUsername(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"setUsername(String)","url":"setUsername(java.lang.String)"},{"p":"com.lambdaschool.foundation.models","c":"Role","l":"setUsers(Set<UserRoles>)","url":"setUsers(java.util.Set)"},{"p":"com.lambdaschool.foundation.config","c":"SimpleCorsFilter","l":"SimpleCorsFilter()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.config","c":"Swagger2Config","l":"Swagger2Config()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.config","c":"SwaggerWebMVC","l":"SwaggerWebMVC()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"tearDown()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"tearDown()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"tearDown()"},{"p":"com.lambdaschool.foundation.config","c":"SecurityConfig","l":"tokenStore()"},{"p":"com.lambdaschool.foundation.models","c":"ValidationError","l":"toString()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"update()"},{"p":"com.lambdaschool.foundation.services","c":"RoleService","l":"update(long, Role)","url":"update(long,com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.services","c":"RoleServiceImpl","l":"update(long, Role)","url":"update(long,com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.services","c":"UseremailService","l":"update(long, String)","url":"update(long,java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UseremailServiceImpl","l":"update(long, String)","url":"update(long,java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserService","l":"update(User, long)","url":"update(com.lambdaschool.foundation.models.User,long)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"update(User, long)","url":"update(com.lambdaschool.foundation.models.User,long)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"updateFullUser(User, long)","url":"updateFullUser(com.lambdaschool.foundation.models.User,long)"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"updateNotFound()"},{"p":"com.lambdaschool.foundation.repository","c":"RoleRepository","l":"updateRoleName(String, long, String)","url":"updateRoleName(java.lang.String,long,java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"updateUser()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"UpdateUser()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"updateUser(User, long)","url":"updateUser(com.lambdaschool.foundation.models.User,long)"},{"p":"com.lambdaschool.foundation.controllers","c":"UseremailController","l":"updateUserEmail(long, String)","url":"updateUserEmail(long,java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"updateUserPatch()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"User()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"User","l":"User(String, String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.lambdaschool.foundation.services","c":"UserAuditing","l":"UserAuditing()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserController","l":"UserController()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"UserControllerIntegrationTest()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerUnitNoDBTest","l":"UserControllerUnitNoDBTest()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"Useremail()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"Useremail","l":"Useremail(User, String)","url":"%3Cinit%3E(com.lambdaschool.foundation.models.User,java.lang.String)"},{"p":"com.lambdaschool.foundation.controllers","c":"UseremailController","l":"UseremailController()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UseremailServiceImpl","l":"UseremailServiceImpl()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"UserMinimum","l":"UserMinimum()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"UserRoles()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"UserRoles","l":"UserRoles(User, Role)","url":"%3Cinit%3E(com.lambdaschool.foundation.models.User,com.lambdaschool.foundation.models.Role)"},{"p":"com.lambdaschool.foundation.models","c":"UserRolesId","l":"UserRolesId()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImpl","l":"UserServiceImpl()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplNoDBTest","l":"UserServiceImplNoDBTest()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.services","c":"UserServiceImplWithDBTest","l":"UserServiceImplWithDBTest()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.models","c":"ValidationError","l":"ValidationError()","url":"%3Cinit%3E()"},{"p":"com.lambdaschool.foundation.controllers","c":"UserControllerIntegrationTest","l":"whenMeasuredResponseTime()"}]